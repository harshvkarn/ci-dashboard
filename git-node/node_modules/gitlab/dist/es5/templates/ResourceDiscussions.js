"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _urlJoin = _interopRequireDefault(require("url-join"));

var _infrastructure = require("../infrastructure");

var ResourceDiscussions =
/*#__PURE__*/
function (_BaseService) {
  (0, _inherits2.default)(ResourceDiscussions, _BaseService);

  function ResourceDiscussions(resourceType, resource2Type) {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ResourceDiscussions);

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ResourceDiscussions)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.url = (0, _urlJoin.default)(_this.url, resourceType);
    _this.resource2Type = resource2Type;
    return _this;
  }

  (0, _createClass2.default)(ResourceDiscussions, [{
    key: "addNote",
    value: function addNote(resourceId, resource2Id, discussiodId, noteId, options) {
      if (!options.body) throw new Error('Missing required property: body');

      var _map = [resourceId, resource2Id, discussiodId, noteId].map(encodeURIComponent),
          _map2 = (0, _slicedToArray2.default)(_map, 4),
          rId = _map2[0],
          r2Id = _map2[1],
          dId = _map2[2],
          nId = _map2[3];

      return _infrastructure.RequestHelper.put(this, "".concat(rId, "/").concat(this.resource2Type, "/").concat(r2Id, "/discussions/").concat(dId, "/notes/").concat(nId), options);
    }
  }, {
    key: "all",
    value: function all(resourceId, resource2Id, options) {
      var _map3 = [resourceId, resource2Id].map(encodeURIComponent),
          _map4 = (0, _slicedToArray2.default)(_map3, 2),
          rId = _map4[0],
          r2Id = _map4[1];

      return _infrastructure.RequestHelper.get(this, "".concat(rId, "/").concat(this.resource2Type, "/").concat(r2Id, "/discussions"), options);
    }
  }, {
    key: "create",
    value: function create(resourceId, resource2Id, options) {
      if (!options.body) throw new Error('Missing required property: body');

      var _map5 = [resourceId, resource2Id].map(encodeURIComponent),
          _map6 = (0, _slicedToArray2.default)(_map5, 2),
          rId = _map6[0],
          r2Id = _map6[1];

      return _infrastructure.RequestHelper.post(this, "".concat(rId, "/").concat(this.resource2Type, "/").concat(r2Id, "/discussions"), options);
    }
  }, {
    key: "editNote",
    value: function editNote(resourceId, resource2Id, discussiodId, noteId, body) {
      var _map7 = [resourceId, resource2Id, discussiodId, noteId].map(encodeURIComponent),
          _map8 = (0, _slicedToArray2.default)(_map7, 4),
          rId = _map8[0],
          r2Id = _map8[1],
          dId = _map8[2],
          nId = _map8[3];

      return _infrastructure.RequestHelper.put(this, "".concat(rId, "/").concat(this.resource2Type, "/").concat(r2Id, "/discussions/").concat(dId, "/notes/").concat(nId), {
        body: body
      });
    }
  }, {
    key: "removeNote",
    value: function removeNote(resourceId, resource2Id, discussiodId, noteId) {
      var _map9 = [resourceId, resource2Id, discussiodId, noteId].map(encodeURIComponent),
          _map10 = (0, _slicedToArray2.default)(_map9, 4),
          rId = _map10[0],
          r2Id = _map10[1],
          dId = _map10[2],
          nId = _map10[3];

      return _infrastructure.RequestHelper.delete(this, "".concat(rId, "/").concat(this.resource2Type, "/").concat(r2Id, "/discussions/").concat(dId, "/notes/").concat(nId));
    }
  }, {
    key: "show",
    value: function show(resourceId, resource2Id, discussiodId) {
      var _map11 = [resourceId, resource2Id, discussiodId].map(encodeURIComponent),
          _map12 = (0, _slicedToArray2.default)(_map11, 3),
          rId = _map12[0],
          r2Id = _map12[1],
          dId = _map12[2];

      return _infrastructure.RequestHelper.get(this, "".concat(rId, "/").concat(this.resource2Type, "/").concat(r2Id, "/discussions/").concat(dId));
    }
  }]);
  return ResourceDiscussions;
}(_infrastructure.BaseService);

var _default = ResourceDiscussions;
exports.default = _default;
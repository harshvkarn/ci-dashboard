"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _infrastructure = require("../infrastructure");

var Jobs =
/*#__PURE__*/
function (_BaseService) {
  (0, _inherits2.default)(Jobs, _BaseService);

  function Jobs() {
    (0, _classCallCheck2.default)(this, Jobs);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Jobs).apply(this, arguments));
  }

  (0, _createClass2.default)(Jobs, [{
    key: "all",
    value: function all(projectId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var pId = encodeURIComponent(projectId);
      return _infrastructure.RequestHelper.get(this, "projects/".concat(pId, "/jobs"), options);
    }
  }, {
    key: "cancel",
    value: function cancel(projectId, jobId) {
      var _map = [projectId, jobId].map(encodeURIComponent),
          _map2 = (0, _slicedToArray2.default)(_map, 2),
          pId = _map2[0],
          jId = _map2[1];

      return _infrastructure.RequestHelper.post(this, "projects/".concat(pId, "/jobs/").concat(jId, "/cancel"));
    }
  }, {
    key: "downloadSingleArtifactFile",
    value: function downloadSingleArtifactFile(projectId, jobId, artifactPath) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
        stream: false
      };

      var _map3 = [projectId, jobId].map(encodeURIComponent),
          _map4 = (0, _slicedToArray2.default)(_map3, 2),
          pId = _map4[0],
          jId = _map4[1];

      return _infrastructure.RequestHelper.get(this, "projects/".concat(pId, "/jobs/").concat(jId, "/artifacts/").concat(artifactPath), options, {
        stream: options.stream
      });
    }
  }, {
    key: "downloadLatestArtifactFile",
    value: function downloadLatestArtifactFile(projectId, ref, name) {
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
        stream: false
      };

      var _map5 = [projectId, ref, name].map(encodeURIComponent),
          _map6 = (0, _slicedToArray2.default)(_map5, 3),
          pId = _map6[0],
          rId = _map6[1],
          jobName = _map6[2];

      return _infrastructure.RequestHelper.get(this, "projects/".concat(pId, "/jobs/artifacts/").concat(rId, "/download?job=").concat(jobName), options, {
        stream: options.stream
      });
    }
  }, {
    key: "downloadTraceFile",
    value: function downloadTraceFile(projectId, jobId) {
      var _map7 = [projectId, jobId].map(encodeURIComponent),
          _map8 = (0, _slicedToArray2.default)(_map7, 2),
          pId = _map8[0],
          jId = _map8[1];

      return _infrastructure.RequestHelper.get(this, "projects/".concat(pId, "/jobs/").concat(jId, "/trace"));
    }
  }, {
    key: "erase",
    value: function erase(projectId, jobId) {
      var _map9 = [projectId, jobId].map(encodeURIComponent),
          _map10 = (0, _slicedToArray2.default)(_map9, 2),
          pId = _map10[0],
          jId = _map10[1];

      return _infrastructure.RequestHelper.post(this, "projects/".concat(pId, "/jobs/").concat(jId, "/erase"));
    }
  }, {
    key: "keepArtifacts",
    value: function keepArtifacts(projectId, jobId) {
      var _map11 = [projectId, jobId].map(encodeURIComponent),
          _map12 = (0, _slicedToArray2.default)(_map11, 2),
          pId = _map12[0],
          jId = _map12[1];

      return _infrastructure.RequestHelper.post(this, "projects/".concat(pId, "/jobs/").concat(jId, "/artifacts/keep"));
    }
  }, {
    key: "play",
    value: function play(projectId, jobId) {
      var _map13 = [projectId, jobId].map(encodeURIComponent),
          _map14 = (0, _slicedToArray2.default)(_map13, 2),
          pId = _map14[0],
          jId = _map14[1];

      return _infrastructure.RequestHelper.post(this, "projects/".concat(pId, "/jobs/").concat(jId, "/play"));
    }
  }, {
    key: "retry",
    value: function retry(projectId, jobId) {
      var _map15 = [projectId, jobId].map(encodeURIComponent),
          _map16 = (0, _slicedToArray2.default)(_map15, 2),
          pId = _map16[0],
          jId = _map16[1];

      return _infrastructure.RequestHelper.post(this, "projects/".concat(pId, "/jobs/").concat(jId, "/retry"));
    }
  }, {
    key: "show",
    value: function show(projectId, jobId) {
      var _map17 = [projectId, jobId].map(encodeURIComponent),
          _map18 = (0, _slicedToArray2.default)(_map17, 2),
          pId = _map18[0],
          jId = _map18[1];

      return _infrastructure.RequestHelper.get(this, "projects/".concat(pId, "/jobs/").concat(jId));
    }
  }, {
    key: "showPipelineJobs",
    value: function showPipelineJobs(projectId, pipelineId, options) {
      var _map19 = [projectId, pipelineId].map(encodeURIComponent),
          _map20 = (0, _slicedToArray2.default)(_map19, 2),
          pId = _map20[0],
          ppId = _map20[1];

      return _infrastructure.RequestHelper.get(this, "projects/".concat(pId, "/pipelines/").concat(ppId, "/jobs"), options);
    }
  }]);
  return Jobs;
}(_infrastructure.BaseService);

var _default = Jobs;
exports.default = _default;